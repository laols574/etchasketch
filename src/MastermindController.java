import java.util.ArrayList;

/**
 * 
 * @author Lauren Olson
 *
 */
public class MastermindController {
	
	// Only these methods may be public - you may not create any additional 
	// public methods (and NO public fields)
	private MastermindModel model;
	private ArrayList<Integer> indexArray;
	public MastermindController(MastermindModel model) {
		this.model = model;

	}
 
	/** 
	 * This method returns a boolean value based on whether the guess
	 * given to it matches the answer generated by the Mastermind model
	 * @param guess - a String guess of colors 
	 * @return a boolean value based on whether the guess matches the answer
	 * or not 
	 * @throws MastermindIllegalColorException - an exception that is thrown if the 
	 * user inputs the wrong color
	 * @throws MastermindIllegalLengthException- an exception for when the user
	 */
    public boolean isCorrect(String guess) throws MastermindIllegalColorException, MastermindIllegalLengthException {
		if(!(guess.contains("r") | guess.contains("g") |guess.contains("b") |guess.contains("p") |guess.contains("o") |guess.contains("y") ))
			throw new MastermindIllegalColorException(guess);
		if(guess.length() != 4)
			throw new MastermindIllegalLengthException(guess);
    	if(guess.length() != 4) {
    		return false;
    	}
    	else {
    		for(int i = 0; i < 4; i++) {
    			char answerChar = model.getColorAt(i);
    			char guessChar = guess.charAt(i);
    			if(!(guessChar == answerChar)) {
    				return false;
    			}
    		}
    		return true;
    	}
    }

    /**
     * this function returns the amount of chars in the guessed
     * string are in the right color and in the right place
     * @param guess - the String given to the function of colors
     * @return int rightColorRightPlace - the value of chars in the right color and place
     */
    public int getRightColorRightPlace(String guess) { 
    	indexArray = new ArrayList<Integer>();
    	int rightColorRightPlace = 0;
    	for(int i = 0, j = 0; i < guess.length() && j < 4; i++, j++) {
			char answerChar = model.getColorAt(j);
			char guessChar = guess.charAt(i);
			if((guessChar == answerChar)) {
				rightColorRightPlace++;

			}
			else {
				indexArray.add(i);
			}
		}
    	return rightColorRightPlace; //Just something for now to make sure the code compiles
    }

    /**
     * this function returns the amount of chars in the String 
     * guess that are the right color but in the wrong place
     * @param String guess - the value of the guess inputed into the function
     * @return int rightColorWrongPlace - the value of chars that are the right color but 
     * in the wrong place 
     */
    public int getRightColorWrongPlace(String guess) {
    	int rightColorWrongPlace = 0;
    	for(int i : indexArray){
    		char guessChar = guess.charAt(i);
    		for(int j : indexArray) {
    			char answerChar = model.getColorAt(j);
    			if(answerChar == guessChar) {
    				rightColorWrongPlace++;
    				break;
    			}
    			
    		}
    	}
    	return rightColorWrongPlace; //Just something for now to make sure the code compiles
    }

    // Create as many private methods as you like

}